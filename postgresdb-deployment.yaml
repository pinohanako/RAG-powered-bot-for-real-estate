apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: postgresdb
  name: postgresdb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: postgresdb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: postgresdb
    spec:
      containers:
        - env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_DB
                  name: postgres-env
            - name: POSTGRES_HOST_AUTH_METHOD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_HOST_AUTH_METHOD
                  name: postgres-env
            - name: POSTGRES_INITDB_ARGS
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_INITDB_ARGS
                  name: postgres-env
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-env
            - name: POSTGRES_USER
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_USER
                  name: postgres-env
          image: postgres
          livenessProbe:
            exec:
              command:
                - pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}
            failureThreshold: 10
            periodSeconds: 1
            timeoutSeconds: 5
          name: postgresdb
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
      restartPolicy: Always
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
